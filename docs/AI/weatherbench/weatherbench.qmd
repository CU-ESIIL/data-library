---
title: "WeatherBench"
format: gfm
editor_options: 
  markdown: 
    wrap: 72
---






```{python, cache=TRUE, warnings=FALSE, messages=FALSE, results='hide'}
import xarray as xr
import matplotlib.pyplot as plt
```

```{bash, cache=TRUE, warnings=FALSE, messages=FALSE, results='hide'}

# This might take a few minutes
wget "https://dataserv.ub.tum.de/s/m1524895/download?path=%2F5.625deg%2Fgeopotential_500&files=geopotential_500_5.625deg.zip" -O geopotential_500_5.625deg.zip --no-check-certificate

```


```{bash, cache=TRUE, warnings=FALSE, messages=FALSE, results='hide', eval=FALSE}
mkdir -p geopotential_500
unzip -d geopotential_500/ geopotential_500_5.625deg.zip
```


```{python, cache=TRUE, warnings=FALSE, messages=FALSE, results='hide'}
z500 = xr.open_mfdataset('geopotential_500/*.nc', combine='by_coords')
z500
```
```{python, cache=TRUE, warnings=FALSE, messages=FALSE, results='hide'}

plt.clf()
# Plot an example
z500.z.isel(time=1500).plot();
plt.show()
```

```{python, cache=TRUE, warnings=FALSE, messages=FALSE, results='hide'}
plt.clf()
# To speed things up we will just take the mean for 2016
climatology = z500.sel(time=slice('2016', '2018')).mean('time').load()
climatology.z.plot()

plt.show()
```



```{r, cache=TRUE, warnings=FALSE, messages=FALSE, results='hide'}
library(RCurl)
library(ncdf4)
library(ggplot2)
library(reshape2)
library(tidync)

# Set options to skip SSL verification
download_opts <- list(ssl.verifypeer = FALSE, ssl.verifyhost = FALSE)

# Download the dataset
bin_data <- getBinaryURL("https://dataserv.ub.tum.de/s/m1524895/download?path=%2F5.625deg%2Fgeopotential_500&files=geopotential_500_5.625deg.zip", .opts = download_opts)

# Write the downloaded data to a file
writeBin(bin_data, "geopotential_500_5.625deg.zip")

# Unzip the downloaded file
unzip("geopotential_500_5.625deg.zip", exdir = "geopotential_500/")

# Load multiple NetCDF files into R
filenames <- list.files(path = "geopotential_500", full.names = TRUE, pattern = "*.nc")

# Use tidync to read the first NetCDF file
z500_first <- tidync(filenames[[1]]) %>% hyper_tibble()

# Melt the data frame to make it compatible with ggplot2
z500_melt <- melt(z500_first, id.vars = c("lon", "lat")) 

ggplot(z500_melt, aes(lon, lat, fill = value)) + 
   geom_tile() +
   scale_fill_gradientn(colors = terrain.colors(1000)) +
   theme_minimal() +
   theme(axis.text = element_blank(),
         axis.ticks = element_blank(),
         panel.grid = element_blank())
```
