---
title: "dryad"
format: gfm
---
Dryad is a repository of curated, open access, data files associated with published articles in the sciences and social sciences. To access a dataset, you'll first need to choose a dataset and get its DOI (Digital Object Identifier) or a direct link to download the dataset. In this example, we'll use a dataset called "The phantom chorus: birdsong boosts human well-being in protected areas" by Dr. Clinton Francis with DOI: 10.5061/dryad.vmcvdncs3.

https://datadryad.org/stash/dataset/doi:10.5061/dryad.wwpzgmsgx

Citation

Francis, Clinton (2020), The phantom chorus: birdsong boosts human well-being in protected areas, Dryad, Dataset, https://doi.org/10.5061/dryad.wwpzgmsgx

Abstract

Spending time in nature is known to benefit human health and well-being, but evidence is mixed as to whether biodiversity or perceptions of biodiversity contribute to these benefits. Perhaps more importantly, little is known about the sensory modalities by which humans perceive biodiversity and obtain benefits from their interactions with nature. Here, we used a “phantom bird song chorus” consisting of hidden speakers to experimentally increase audible birdsong biodiversity during “on” and “off” (i.e., ambient conditions) blocks on two trails to study the role of audition in biodiversity perception and self-reported well-being among hikers. Hikers exposed to the phantom chorus reported higher levels of restorative effects compared to those that experienced ambient conditions on both trails; however, increased restorative effects were directly linked to the phantom chorus on one trail and indirectly linked to the phantom chorus on the other trail through perceptions of avian biodiversity. Our findings add to a growing body of evidence linking mental health to nature experiences and suggest that audition is an important modality by which natural environments confer restorative effects. Finally, our results suggest that maintaining or improving natural soundscapes within protected areas may be an important component to maximizing human experiences.



R code:

```{r, eval=FALSE}
# List of packages to install
package_list <- c("rdryad", "ggplot2")

# Function to check if a package is installed
is_package_installed <- function(package_name) {
  require(package_name, character.only = TRUE, quietly = TRUE)
}

# Install packages that are not already installed
for (package in package_list) {
  if (!is_package_installed(package)) {
    install.packages(package)
  }
}
```




```{r, cache=TRUE}
library(rdryad)
library(ggplot2)
library(rappdirs)


search_results <- dryad_datasets()
print(search_results$data)

# Get the first DOI from the search results
doi <-  "https://doi.org/10.5061/dryad.wwpzgmsgx"
clean_doi <- gsub("https://doi.org/", "", doi)

files <- dryad_download(clean_doi)
print(files)
a <- unlist(files)
short_files <- as.data.frame(a)[,1]

# Identify the CSV file from the extracted files
csv_file <- list.files(file.path(user_cache_dir(), "R", "rdryad", "10_5061_dryad_wwpzgmsgx"), pattern = ".csv", full.names = TRUE)[2]

print(csv_file)

# Read the CSV data
data <- read.csv(csv_file)

ggplot(data=data, aes(y=Perceivedrestoration, Sound_Comp)) +
  geom_point()
  
```



```{python, cache=TRUE, eval=FALSE}
import requests
import pandas as pd
import matplotlib.pyplot as plt
import io
import time
import zipfile
import os

# Search for datasets related to the term "habitat"
base_url = "https://datadryad.org/api/v2/datasets?"
params = {"query": "habitat"}

response = requests.get(base_url, params=params)
search_results = response.json()

# Get the first DOI from the search results
files_url = "https://datadryad.org/api/v2/datasets/doi%3A10.5061%2Fdryad.wwpzgmsgx/download"
# Download the dataset
response = requests.get(files_url)
if response.status_code == 200:
  zip_filename = 'response.zip'
  with open(zip_filename, 'wb') as zip_file:
    for chunk in response.iter_content(chunk_size=255): 
        if chunk:
          zip_file.write(chunk)
else:
  print(f"Response generated non successful response code {response.status_code}")
  return

# Identify the CSV file from the extracted files
csv_file = None
with zipfile.ZipFile("response.zip", "r") as f:
    for name in f.namelist():
        if '.csv' in name:
          csv_file = name
          f.extract(csv_file)
          break

# Read the CSV data
data = pd.read_csv(csv_file)

# Plot the data using pandas and matplotlib
# Replace 'Perceivedrestoration' and 'Sound_Comp' with the actual column names in your dataset
ax = data.plot(x='Perceivedrestoration', y='Sound_Comp', kind='scatter')
ax.set_xlabel('Perceivedrestoration')
ax.set_ylabel('Sound_Comp')
plt.show()
if os.path.exists('response.zip'):
  os.remove('response.zip')
```




